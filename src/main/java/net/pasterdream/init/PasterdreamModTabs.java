
/*
 *    MCreator note: This file will be REGENERATED on each build.
 */
package net.pasterdream.init;

import net.pasterdream.PasterdreamMod;

import net.minecraftforge.registries.RegistryObject;
import net.minecraftforge.registries.DeferredRegister;

import net.minecraft.world.item.ItemStack;
import net.minecraft.world.item.CreativeModeTab;
import net.minecraft.network.chat.Component;
import net.minecraft.core.registries.Registries;

public class PasterdreamModTabs {
	public static final DeferredRegister<CreativeModeTab> REGISTRY = DeferredRegister.create(Registries.CREATIVE_MODE_TAB, PasterdreamMod.MODID);
	public static final RegistryObject<CreativeModeTab> PASTER_TAB_0 = REGISTRY.register("paster_tab_0",
			() -> CreativeModeTab.builder().title(Component.translatable("item_group.pasterdream.paster_tab_0")).icon(() -> new ItemStack(PasterdreamModItems.MELTDREAM_CRYSTAL_0.get())).displayItems((parameters, tabData) -> {
				tabData.accept(PasterdreamModItems.MELTDREAM_CRYSTAL_0.get());
				tabData.accept(PasterdreamModItems.DYEDREAM_DUST.get());
				tabData.accept(PasterdreamModItems.DYEDREAM_DUST_PIECE.get());
				tabData.accept(PasterdreamModItems.DYEDREAM_DYE.get());
				tabData.accept(PasterdreamModItems.DYEDREAM_BUD_NUGGET.get());
				tabData.accept(PasterdreamModItems.DYEDREAMQUARTZ.get());
				tabData.accept(PasterdreamModItems.DREAM_COIN_0.get());
				tabData.accept(PasterdreamModItems.DREAM_COIN_1.get());
				tabData.accept(PasterdreamModItems.RAW_TITANIUM.get());
				tabData.accept(PasterdreamModItems.RAW_MOLTENGOLD.get());
				tabData.accept(PasterdreamModItems.TITANIUM_INGOT.get());
				tabData.accept(PasterdreamModItems.MOLTENGOLD_INGOT.get());
				tabData.accept(PasterdreamModItems.DYEDREAM_BASE.get());
				tabData.accept(PasterdreamModItems.DYEDREAM_INGOT.get());
				tabData.accept(PasterdreamModItems.WIND_IRON_INGOT.get());
				tabData.accept(PasterdreamModItems.TITANIUM_NUGGET.get());
				tabData.accept(PasterdreamModItems.MOLTENGOLD_NUGGET.get());
				tabData.accept(PasterdreamModItems.DYEDREAM_NUGGET.get());
				tabData.accept(PasterdreamModItems.MOLTENGOLD_DUST.get());
				tabData.accept(PasterdreamModItems.SOUL_DUST.get());
				tabData.accept(PasterdreamModItems.SOUL_ESSENCE.get());
				tabData.accept(PasterdreamModItems.MAGIC_STONE.get());
				tabData.accept(PasterdreamModItems.WINDRUNNER_CRYSTAL.get());
				tabData.accept(PasterdreamModItems.PULSE_WINDRUNNER_CRYSTAL.get());
				tabData.accept(PasterdreamModItems.CONGEAL_WIND.get());
				tabData.accept(PasterdreamModItems.PINK_SLIMEBALL.get());
				tabData.accept(PasterdreamModItems.DREAM_FERTILIZER.get());
				tabData.accept(PasterdreamModItems.PINKEGG.get());
				tabData.accept(PasterdreamModBlocks.LIGHTBALL.get().asItem());
				tabData.accept(PasterdreamModItems.DYEDREAM_COROLLA.get());
				tabData.accept(PasterdreamModItems.WHITE_COROLLA.get());
				tabData.accept(PasterdreamModItems.RED_DEW_0.get());
				tabData.accept(PasterdreamModItems.BLUE_DEW.get());
				tabData.accept(PasterdreamModItems.BLUE_HEART_OF_THE_SEA.get());
				tabData.accept(PasterdreamModItems.ELDER_GUARDIAN_SCALE.get());
				tabData.accept(PasterdreamModItems.BLACK_BEETLE_CARAPACE.get());
				tabData.accept(PasterdreamModItems.BLACK_BEETLE_VOCALCORD.get());
				tabData.accept(PasterdreamModBlocks.PEBBLE_0.get().asItem());
				tabData.accept(PasterdreamModItems.CHARGED_AMETHYST.get());
				tabData.accept(PasterdreamModItems.JUNGLE_SPORE.get());
				tabData.accept(PasterdreamModItems.PROTECT_DECK.get());
				tabData.accept(PasterdreamModItems.COTTON.get());
				tabData.accept(PasterdreamModItems.SPOOL.get());
				tabData.accept(PasterdreamModItems.FABRIC.get());
				tabData.accept(PasterdreamModItems.PERGAMYN.get());
				tabData.accept(PasterdreamModItems.PEN_AND_INK.get());
				tabData.accept(PasterdreamModItems.ANGEL_BLOCK_ITEM.get());
				tabData.accept(PasterdreamModItems.REEDROD.get());
				tabData.accept(PasterdreamModItems.RYESEED.get());
				tabData.accept(PasterdreamModItems.FLOUR.get());
				tabData.accept(PasterdreamModItems.SALT.get());
				tabData.accept(PasterdreamModItems.COARSE_SALT.get());
				tabData.accept(PasterdreamModItems.SORBENT.get());
				tabData.accept(PasterdreamModItems.WIND_PLANT_EXTRACT.get());
				tabData.accept(PasterdreamModItems.MELTDREAM_LIQUID_BUCKET.get());
				tabData.accept(PasterdreamModItems.SHADOW_LIQUID_BUCKET.get());
				tabData.accept(PasterdreamModItems.PALE_BONENEEDLE.get());
				tabData.accept(PasterdreamModItems.ROOTS_PALE_BONENEEDLE.get());
				tabData.accept(PasterdreamModItems.MORTAR.get());
				tabData.accept(PasterdreamModItems.BASALT_SNAIL_SHELL.get());
				tabData.accept(PasterdreamModItems.SCULK_HEART.get());
				tabData.accept(PasterdreamModItems.BLACKSTICK.get());
				tabData.accept(PasterdreamModItems.SWORD_EMBRYO_0.get());
				tabData.accept(PasterdreamModBlocks.SHADOWCANDLE.get().asItem());
				tabData.accept(PasterdreamModBlocks.CLAY_POT_0.get().asItem());
				tabData.accept(PasterdreamModItems.NIGHTMARE_FUEL.get());
				tabData.accept(PasterdreamModItems.RUST_BLACK_METAL_GRAIN.get());
				tabData.accept(PasterdreamModItems.BLACKMETAL_GRAIN.get());
				tabData.accept(PasterdreamModItems.BLACKMETAL_INGOT.get());
				tabData.accept(PasterdreamModItems.BROKENNOTES_0.get());
				tabData.accept(PasterdreamModItems.UNKNOWNNOTES_0.get());
				tabData.accept(PasterdreamModItems.SHADOW_DUNGEON_KEY.get());
				tabData.accept(PasterdreamModItems.PURE_HORROR.get());
				tabData.accept(PasterdreamModItems.WHITE_CRYSTAL.get());
				tabData.accept(PasterdreamModItems.SHADOW_HILT.get());
				tabData.accept(PasterdreamModItems.TIME_HOURGLASS.get());
				tabData.accept(PasterdreamModItems.WIND_VANE.get());
				tabData.accept(PasterdreamModItems.DREAM_WAND_EMBRYO.get());
				tabData.accept(PasterdreamModItems.TERRASWORD_EMBRYO.get());
				tabData.accept(PasterdreamModItems.SHADOW_EROSION_SWORD_EMBRYO.get());
				tabData.accept(PasterdreamModItems.SHADOW_EROSION_PICKAXE_EMBRYO.get());
				tabData.accept(PasterdreamModItems.SHADOW_EROSION_AXE_EMBRYO.get());
				tabData.accept(PasterdreamModItems.SHADOW_EROSION_HOE_EMBRYO.get());
				tabData.accept(PasterdreamModItems.SHADOW_EROSION_SHOVEL_EMBRYO.get());
				tabData.accept(PasterdreamModItems.ICESHADOW_HAMMER_EMBRYO.get());
				tabData.accept(PasterdreamModItems.WHITE_SWORD_EMBRYO.get());
				tabData.accept(PasterdreamModItems.SHADOW_SWORD_EMBRYO.get());
				tabData.accept(PasterdreamModItems.STAR_WISH_ROD_EMBRYO.get());
				tabData.accept(PasterdreamModItems.DEEP_TREASURE_0.get());
				tabData.accept(PasterdreamModItems.DEEP_TREASURE_1.get());
				tabData.accept(PasterdreamModItems.ENHANCE_STONE_0.get());
				tabData.accept(PasterdreamModItems.ENHANCE_STONE_1.get());
				tabData.accept(PasterdreamModItems.TURN_PALE_CECILIA.get());
				tabData.accept(PasterdreamModItems.CALLE_CARD_0.get());
				tabData.accept(PasterdreamModItems.CALLE_CARD_1.get());
				tabData.accept(PasterdreamModItems.CALLE_CARD_2.get());
				tabData.accept(PasterdreamModItems.CALLE_CARD_3.get());
				tabData.accept(PasterdreamModItems.CALLE_CARD_4.get());
				tabData.accept(PasterdreamModItems.CALLE_CARD_5.get());
				tabData.accept(PasterdreamModItems.CALLE_CARD_6.get());
				tabData.accept(PasterdreamModItems.CALLE_CARD_7.get());
				tabData.accept(PasterdreamModItems.CALLE_CARD_8.get());
				tabData.accept(PasterdreamModItems.CALLE_CARD_9.get());
				tabData.accept(PasterdreamModItems.SWEETDREAM_DISC.get());
				tabData.accept(PasterdreamModItems.SNOWFALLDREAM_DISC.get());
				tabData.accept(PasterdreamModItems.AARONCOS_DISC.get());
				tabData.accept(PasterdreamModItems.WIND_JOURNEY_DISC.get());
				tabData.accept(PasterdreamModItems.LIGHTNING_SPELL.get());
				tabData.accept(PasterdreamModItems.POISON_SPELL.get());
				tabData.accept(PasterdreamModItems.HEALING_SPELL.get());
				tabData.accept(PasterdreamModItems.FURY_SPELL.get());
				tabData.accept(PasterdreamModItems.ICE_SPELL.get());
			})

					.build());
	public static final RegistryObject<CreativeModeTab> PASTER_TAB_1 = REGISTRY.register("paster_tab_1",
			() -> CreativeModeTab.builder().title(Component.translatable("item_group.pasterdream.paster_tab_1")).icon(() -> new ItemStack(PasterdreamModBlocks.DYEDREAM_GRASS.get())).displayItems((parameters, tabData) -> {
				tabData.accept(PasterdreamModBlocks.DYEDREAM_GRASS.get().asItem());
				tabData.accept(PasterdreamModBlocks.DYEDREAM_DIRT.get().asItem());
				tabData.accept(PasterdreamModBlocks.DYEDREAM_SAND.get().asItem());
				tabData.accept(PasterdreamModBlocks.DYEDREAM_LOG.get().asItem());
				tabData.accept(PasterdreamModBlocks.DYEDREAM_WOOD.get().asItem());
				tabData.accept(PasterdreamModBlocks.DYEDREAM_LEAVES.get().asItem());
				tabData.accept(PasterdreamModBlocks.DYEDREAM_WORLDTREE_LEAVES.get().asItem());
				tabData.accept(PasterdreamModBlocks.DYEDREAM_PLANKS.get().asItem());
				tabData.accept(PasterdreamModBlocks.DYEDREAM_PLANKS_STAIRS.get().asItem());
				tabData.accept(PasterdreamModBlocks.DYEDREAM_PLANKS_SLAB.get().asItem());
				tabData.accept(PasterdreamModBlocks.DYEDREAM_PLANKS_FENCE.get().asItem());
				tabData.accept(PasterdreamModBlocks.DYEDREAM_PLANKS_FENCEGATE.get().asItem());
				tabData.accept(PasterdreamModBlocks.DYEDREAM_PLANKS_PANE.get().asItem());
				tabData.accept(PasterdreamModBlocks.DYEDREAM_PLANKS_DOOR.get().asItem());
				tabData.accept(PasterdreamModBlocks.DYEDREAM_PLANKS_TRAPDOOR.get().asItem());
				tabData.accept(PasterdreamModBlocks.DYEDREAM_PLANKS_PRESSURE_PLATE.get().asItem());
				tabData.accept(PasterdreamModBlocks.DYEDREAM_PLANKS_BUTTON.get().asItem());
				tabData.accept(PasterdreamModBlocks.DYEDREAMQUARTZ_ORE.get().asItem());
				tabData.accept(PasterdreamModBlocks.DYEDREAMDUST_ORE.get().asItem());
				tabData.accept(PasterdreamModBlocks.AMBER_CANDY_ORE.get().asItem());
				tabData.accept(PasterdreamModBlocks.DYEDREAM_BLOCK.get().asItem());
				tabData.accept(PasterdreamModBlocks.PINKSLIME_BLOCK.get().asItem());
				tabData.accept(PasterdreamModBlocks.PINKAGARIC_0.get().asItem());
				tabData.accept(PasterdreamModBlocks.PINKAGARIC_1.get().asItem());
				tabData.accept(PasterdreamModBlocks.PINKAGARIC_2.get().asItem());
				tabData.accept(PasterdreamModBlocks.PINKAGARIC_3.get().asItem());
				tabData.accept(PasterdreamModBlocks.DYEDREAM_ICE.get().asItem());
				tabData.accept(PasterdreamModBlocks.DYEDREAM_PACKED_ICE.get().asItem());
				tabData.accept(PasterdreamModBlocks.BIG_BUBBLE.get().asItem());
				tabData.accept(PasterdreamModBlocks.DYEDREAMQUARTZ_BLOCK.get().asItem());
				tabData.accept(PasterdreamModBlocks.SMOOTH_DYEDREAMQUARTZ_BLOCK.get().asItem());
				tabData.accept(PasterdreamModBlocks.BRICKS_DYEDREAMQUARTZ_BLOCK.get().asItem());
				tabData.accept(PasterdreamModBlocks.PILLAR_DYEDREAMQUARTZ_BLOCK.get().asItem());
				tabData.accept(PasterdreamModBlocks.CHISELED_DYEDREAMQUARTZ_BLOCK.get().asItem());
				tabData.accept(PasterdreamModBlocks.DYEDREAMQUARTZ_BLOCK_STAIRS.get().asItem());
				tabData.accept(PasterdreamModBlocks.DYEDREAMQUARTZ_BLOCK_SLAB.get().asItem());
				tabData.accept(PasterdreamModBlocks.DYEDREAMQUARTZ_BLOCK_WALL.get().asItem());
				tabData.accept(PasterdreamModBlocks.DYEDREAM_LARTERN.get().asItem());
				tabData.accept(PasterdreamModBlocks.DYEDREAM_GLASS.get().asItem());
				tabData.accept(PasterdreamModBlocks.DYEDREAM_GLASSPANE.get().asItem());
				tabData.accept(PasterdreamModBlocks.CARVE_DYEDREAM_GLASS.get().asItem());
				tabData.accept(PasterdreamModBlocks.CARVE_DYEDREAM_GLASSPANE.get().asItem());
				tabData.accept(PasterdreamModBlocks.GOLD_CARVE_DYEDREAM_GLASS.get().asItem());
				tabData.accept(PasterdreamModBlocks.GOLD_CARVE_DYEDREAM_GLASSPANE.get().asItem());
				tabData.accept(PasterdreamModBlocks.DYEDREAM_BUD_0.get().asItem());
				tabData.accept(PasterdreamModBlocks.DYEDREAM_BUD_1.get().asItem());
				tabData.accept(PasterdreamModBlocks.DYEDREAM_BUD_2.get().asItem());
				tabData.accept(PasterdreamModBlocks.DYEDREAM_BUD_BLOCK.get().asItem());
				tabData.accept(PasterdreamModBlocks.DYEDREAM_BUD_STAIRS.get().asItem());
				tabData.accept(PasterdreamModBlocks.DYEDREAM_BUD_SLAB.get().asItem());
				tabData.accept(PasterdreamModBlocks.DYEDREAM_BUD_WALL.get().asItem());
				tabData.accept(PasterdreamModBlocks.ICESTONE.get().asItem());
				tabData.accept(PasterdreamModBlocks.ICE_BUD_0.get().asItem());
				tabData.accept(PasterdreamModBlocks.CLOUD.get().asItem());
				tabData.accept(PasterdreamModBlocks.DARK_CLOUD.get().asItem());
				tabData.accept(PasterdreamModBlocks.POLISHED_CALCITE.get().asItem());
				tabData.accept(PasterdreamModBlocks.POLISHED_CALCITE_STAIRS.get().asItem());
				tabData.accept(PasterdreamModBlocks.POLISHED_CALCITE_SLAB.get().asItem());
				tabData.accept(PasterdreamModBlocks.POLISHED_CALCITE_WALL.get().asItem());
				tabData.accept(PasterdreamModBlocks.CALCITE_TILES.get().asItem());
				tabData.accept(PasterdreamModBlocks.CALCITE_TILES_STAIRS.get().asItem());
				tabData.accept(PasterdreamModBlocks.CALCITE_TILES_SLAB.get().asItem());
				tabData.accept(PasterdreamModBlocks.CALCITE_TILES_WALL.get().asItem());
				tabData.accept(PasterdreamModBlocks.TITANIUM_ORE.get().asItem());
				tabData.accept(PasterdreamModBlocks.DEEPSLATE_TITANIUM_ORE.get().asItem());
				tabData.accept(PasterdreamModBlocks.MOLTENGOLD_ORE.get().asItem());
				tabData.accept(PasterdreamModBlocks.SOUL_ORE.get().asItem());
				tabData.accept(PasterdreamModBlocks.RAW_TITANIUM_BLOCK.get().asItem());
				tabData.accept(PasterdreamModBlocks.SALT_BLOCK.get().asItem());
				tabData.accept(PasterdreamModBlocks.TITANIUM_BLOCK.get().asItem());
				tabData.accept(PasterdreamModBlocks.MOLTENGOLD_BLOCK.get().asItem());
				tabData.accept(PasterdreamModBlocks.CHARGED_AMETHYST_BLOCK.get().asItem());
				tabData.accept(PasterdreamModBlocks.SHADOW_BLOCK.get().asItem());
				tabData.accept(PasterdreamModBlocks.THICK_SHADOW_BLOCK.get().asItem());
				tabData.accept(PasterdreamModBlocks.SHADOW_STONE.get().asItem());
				tabData.accept(PasterdreamModBlocks.SHADOW_STONE_BRICK.get().asItem());
				tabData.accept(PasterdreamModBlocks.SHADOW_STONE_BRICK_STAIRS.get().asItem());
				tabData.accept(PasterdreamModBlocks.SHADOW_STONE_BRICK_WALL.get().asItem());
				tabData.accept(PasterdreamModBlocks.SHADOW_STONE_BRICK_SLAB.get().asItem());
				tabData.accept(PasterdreamModBlocks.SHADOW_STONE_BRICKS.get().asItem());
				tabData.accept(PasterdreamModBlocks.SHADOW_STONE_BRICKS_STAIRS.get().asItem());
				tabData.accept(PasterdreamModBlocks.SHADOW_STONE_BRICKS_SLAB.get().asItem());
				tabData.accept(PasterdreamModBlocks.SHADOW_STONE_BRICKS_WALL.get().asItem());
				tabData.accept(PasterdreamModBlocks.SHADOW_STONE_TILES.get().asItem());
				tabData.accept(PasterdreamModBlocks.SHADOW_STONE_TILES_STAIRS.get().asItem());
				tabData.accept(PasterdreamModBlocks.SHADOW_STONE_TILES_SLAB.get().asItem());
				tabData.accept(PasterdreamModBlocks.SHADOW_STONE_TILES_WALL.get().asItem());
				tabData.accept(PasterdreamModBlocks.CRACKED_SHADOW_STONE_BRICK.get().asItem());
				tabData.accept(PasterdreamModBlocks.CHISELED_SHADOW_STONE_BRICK.get().asItem());
				tabData.accept(PasterdreamModBlocks.SHADOW_LIGHT_0.get().asItem());
				tabData.accept(PasterdreamModBlocks.SHADOW_SHROOMLIGHT.get().asItem());
				tabData.accept(PasterdreamModBlocks.SHADOW_NYLIUM.get().asItem());
				tabData.accept(PasterdreamModBlocks.SHADOW_WART_BLOCK.get().asItem());
				tabData.accept(PasterdreamModBlocks.SHADOW_STEM.get().asItem());
				tabData.accept(PasterdreamModBlocks.SHADOW_HYPHAE.get().asItem());
				tabData.accept(PasterdreamModBlocks.STRIPPED_SHADOW_STEM.get().asItem());
				tabData.accept(PasterdreamModBlocks.STRIPPED_SHADOW_HYPHAE.get().asItem());
				tabData.accept(PasterdreamModBlocks.SHADOW_PLANKS.get().asItem());
				tabData.accept(PasterdreamModBlocks.SHADOW_PLANKS_STAIRS.get().asItem());
				tabData.accept(PasterdreamModBlocks.SHADOW_PLANKS_SLAB.get().asItem());
				tabData.accept(PasterdreamModBlocks.SHADOW_PLANKS_FENCE.get().asItem());
				tabData.accept(PasterdreamModBlocks.SHADOW_PLANKS_FENCEGATE.get().asItem());
				tabData.accept(PasterdreamModBlocks.SHADOW_PLANKS_PANE.get().asItem());
				tabData.accept(PasterdreamModBlocks.SHADOW_PLANKS_DOOR.get().asItem());
				tabData.accept(PasterdreamModBlocks.SHADOW_PLANKS_TRAPDOOR.get().asItem());
				tabData.accept(PasterdreamModBlocks.SHADOW_PLANKS_PRESSURE_PLATE.get().asItem());
				tabData.accept(PasterdreamModBlocks.SHADOW_PLANKS_BUTTON.get().asItem());
				tabData.accept(PasterdreamModBlocks.RUST_BLACK_METAL_BLOCK.get().asItem());
				tabData.accept(PasterdreamModBlocks.RUST_BLACK_METAL_BLOCK_WALL.get().asItem());
				tabData.accept(PasterdreamModBlocks.RUST_BLACK_METAL_BLOCK_BARS.get().asItem());
				tabData.accept(PasterdreamModBlocks.BLACKMETAL_BLOCK.get().asItem());
				tabData.accept(PasterdreamModBlocks.ARMOR_WRECK_BLOCK_0.get().asItem());
				tabData.accept(PasterdreamModBlocks.ARMOR_WRECK_BLOCK_1.get().asItem());
				tabData.accept(PasterdreamModBlocks.ARMOR_WRECK_BLOCK_2.get().asItem());
				tabData.accept(PasterdreamModBlocks.ARMOR_WRECK_BLOCK_3.get().asItem());
				tabData.accept(PasterdreamModBlocks.ARMOR_WRECK_BLOCK_4.get().asItem());
				tabData.accept(PasterdreamModBlocks.SHADOW_DUNGEON_BLOCK_0.get().asItem());
				tabData.accept(PasterdreamModBlocks.SHADOW_DUNGEON_BLOCK_1.get().asItem());
				tabData.accept(PasterdreamModBlocks.SHADOW_DUNGEON_BLOCK_2.get().asItem());
				tabData.accept(PasterdreamModBlocks.SHADOW_DUNGEON_BLOCK_3.get().asItem());
				tabData.accept(PasterdreamModBlocks.SHADOW_DUNGEON_BLOCK_4.get().asItem());
				tabData.accept(PasterdreamModBlocks.SHADOW_DUNGEON_BLOCK_5.get().asItem());
				tabData.accept(PasterdreamModBlocks.SHADOW_DUNGEON_BLOCK_6.get().asItem());
				tabData.accept(PasterdreamModBlocks.LOOSE_SHADOW_DUNGEON_BLOCK.get().asItem());
				tabData.accept(PasterdreamModBlocks.SHADOWSHELF_0.get().asItem());
				tabData.accept(PasterdreamModBlocks.SHADOWSHELF_1.get().asItem());
				tabData.accept(PasterdreamModBlocks.SHADOWSHELF_2.get().asItem());
				tabData.accept(PasterdreamModBlocks.SHADOWSHELF_3.get().asItem());
				tabData.accept(PasterdreamModBlocks.SHADOW_ARENA_BLOCK_0.get().asItem());
				tabData.accept(PasterdreamModBlocks.SHADOW_FISSURE_0.get().asItem());
				tabData.accept(PasterdreamModBlocks.SHADOW_FISSURE_1.get().asItem());
				tabData.accept(PasterdreamModBlocks.SHADOW_FISSURE_2.get().asItem());
				tabData.accept(PasterdreamModBlocks.SHADOW_FISSURE_3.get().asItem());
				tabData.accept(PasterdreamModBlocks.SHADOW_FISSURE_4.get().asItem());
				tabData.accept(PasterdreamModBlocks.SHADOW_FISSURE_5.get().asItem());
				tabData.accept(PasterdreamModBlocks.CYAN_MOSS_STONE.get().asItem());
				tabData.accept(PasterdreamModBlocks.CYAN_STONE.get().asItem());
				tabData.accept(PasterdreamModBlocks.WHITE_SAND.get().asItem());
				tabData.accept(PasterdreamModBlocks.THICK_CLOUD.get().asItem());
				tabData.accept(PasterdreamModBlocks.WINDMOOR_LOG.get().asItem());
				tabData.accept(PasterdreamModBlocks.WINDMOOR_WOOD.get().asItem());
				tabData.accept(PasterdreamModBlocks.WINDMOOR_LEAVES_0.get().asItem());
				tabData.accept(PasterdreamModBlocks.WINDMOOR_LEAVES_1.get().asItem());
				tabData.accept(PasterdreamModBlocks.WINDMOOR_LEAVES_2.get().asItem());
				tabData.accept(PasterdreamModBlocks.CYAN_STONE_BRICKS.get().asItem());
				tabData.accept(PasterdreamModBlocks.CYAN_STONE_BRICK_STAIRS.get().asItem());
				tabData.accept(PasterdreamModBlocks.CYAN_STONE_BRICK_SLAB.get().asItem());
				tabData.accept(PasterdreamModBlocks.CYAN_STONE_BRICK_WALL.get().asItem());
				tabData.accept(PasterdreamModBlocks.MOSSY_CYAN_STONE_BRICKS.get().asItem());
				tabData.accept(PasterdreamModBlocks.MOSSY_CYAN_STONE_BRICK_STAIRS.get().asItem());
				tabData.accept(PasterdreamModBlocks.MOSSY_CYAN_STONE_BRICK_SLAB.get().asItem());
				tabData.accept(PasterdreamModBlocks.MOSSY_CYAN_STONE_BRICK_WALL.get().asItem());
				tabData.accept(PasterdreamModBlocks.CHISELED_CYAN_STONE_BRICKS.get().asItem());
				tabData.accept(PasterdreamModBlocks.CYAN_STONE_PILLAR.get().asItem());
				tabData.accept(PasterdreamModBlocks.WINDMOOR_PLANKS.get().asItem());
				tabData.accept(PasterdreamModBlocks.WINDMOOR_STAIRS.get().asItem());
				tabData.accept(PasterdreamModBlocks.WINDMOOR_SLAB.get().asItem());
				tabData.accept(PasterdreamModBlocks.WINDMOOR_FENCE.get().asItem());
				tabData.accept(PasterdreamModBlocks.WINDMOOR_FENCE_GATE.get().asItem());
				tabData.accept(PasterdreamModBlocks.WINDMOOR_DOOR.get().asItem());
				tabData.accept(PasterdreamModBlocks.WINDMOOR_TRAPDOOR.get().asItem());
				tabData.accept(PasterdreamModBlocks.WINDMOOR_PRESSURE_PLATE.get().asItem());
				tabData.accept(PasterdreamModBlocks.WINDMOOR_BUTTON.get().asItem());
				tabData.accept(PasterdreamModBlocks.CYAN_STONE_PRESSURE_PLATE.get().asItem());
				tabData.accept(PasterdreamModBlocks.CYAN_STONE_BUTTON.get().asItem());
				tabData.accept(PasterdreamModBlocks.CLARITY_GLASS.get().asItem());
				tabData.accept(PasterdreamModBlocks.CARVE_CLARITY_GLASS.get().asItem());
				tabData.accept(PasterdreamModBlocks.FRAME_CLARITY_GLASS.get().asItem());
				tabData.accept(PasterdreamModBlocks.CLARITY_GLASSPANE.get().asItem());
				tabData.accept(PasterdreamModBlocks.CARVE_CLARITY_GLASSPANE.get().asItem());
				tabData.accept(PasterdreamModBlocks.FRAME_CLARITY_GLASSPANE.get().asItem());
				tabData.accept(PasterdreamModBlocks.BREAKWIND_CURTAIN.get().asItem());
				tabData.accept(PasterdreamModBlocks.STRIPPED_WINDMOOR_LOG.get().asItem());
				tabData.accept(PasterdreamModBlocks.STRIPPED_WINDMOOR_WOOD.get().asItem());
				tabData.accept(PasterdreamModBlocks.WINDRUNNER_CRYSTAL_ORE.get().asItem());
				tabData.accept(PasterdreamModBlocks.WINDRUNNER_CRYSTAL_BLOCK.get().asItem());
				tabData.accept(PasterdreamModBlocks.CONGEAL_WIND_BLOCK.get().asItem());
				tabData.accept(PasterdreamModBlocks.CONGEAL_WIND_ORE.get().asItem());
				tabData.accept(PasterdreamModBlocks.WIND_IRON_BLOCK.get().asItem());
				tabData.accept(PasterdreamModBlocks.EJECTION_PRESSURE_PLATE.get().asItem());
				tabData.accept(PasterdreamModBlocks.WINDIRON_BARS.get().asItem());
				tabData.accept(PasterdreamModBlocks.EJECTION_PRESSURE_BLOCK.get().asItem());
			})

					.build());
	public static final RegistryObject<CreativeModeTab> PASTER_TAB_2 = REGISTRY.register("paster_tab_2",
			() -> CreativeModeTab.builder().title(Component.translatable("item_group.pasterdream.paster_tab_2")).icon(() -> new ItemStack(PasterdreamModBlocks.DYEDREAM_SAPLING.get())).displayItems((parameters, tabData) -> {
				tabData.accept(PasterdreamModBlocks.DYEDREAM_SAPLING.get().asItem());
				tabData.accept(PasterdreamModBlocks.CROP_0A.get().asItem());
				tabData.accept(PasterdreamModBlocks.CROP_0B.get().asItem());
				tabData.accept(PasterdreamModBlocks.CROP_2A.get().asItem());
				tabData.accept(PasterdreamModBlocks.CROP_2B.get().asItem());
				tabData.accept(PasterdreamModBlocks.CROP_3A.get().asItem());
				tabData.accept(PasterdreamModBlocks.CROP_3B.get().asItem());
				tabData.accept(PasterdreamModBlocks.GRASS_3.get().asItem());
				tabData.accept(PasterdreamModBlocks.GRASS_4.get().asItem());
				tabData.accept(PasterdreamModBlocks.FLOWER_8.get().asItem());
				tabData.accept(PasterdreamModBlocks.FLOWER_10.get().asItem());
				tabData.accept(PasterdreamModBlocks.GRASS_5.get().asItem());
				tabData.accept(PasterdreamModBlocks.GRASS_6.get().asItem());
				tabData.accept(PasterdreamModBlocks.GRASS_7.get().asItem());
				tabData.accept(PasterdreamModBlocks.FLOWER_9.get().asItem());
				tabData.accept(PasterdreamModBlocks.FLOWER_13.get().asItem());
				tabData.accept(PasterdreamModBlocks.FLOWER_14.get().asItem());
				tabData.accept(PasterdreamModBlocks.VINE_0.get().asItem());
				tabData.accept(PasterdreamModBlocks.DYEDREAM_LILY_PAD.get().asItem());
				tabData.accept(PasterdreamModBlocks.DYEDREAM_SEAGRASS.get().asItem());
				tabData.accept(PasterdreamModBlocks.DYEDREAM_LOTUS.get().asItem());
				tabData.accept(PasterdreamModBlocks.FLOWER_11.get().asItem());
				tabData.accept(PasterdreamModBlocks.FLOWER_12.get().asItem());
				tabData.accept(PasterdreamModBlocks.FLOWER_16.get().asItem());
				tabData.accept(PasterdreamModBlocks.FLOWER_17.get().asItem());
				tabData.accept(PasterdreamModBlocks.CROP_1A.get().asItem());
				tabData.accept(PasterdreamModBlocks.CROP_1B.get().asItem());
				tabData.accept(PasterdreamModBlocks.CROP_4A.get().asItem());
				tabData.accept(PasterdreamModBlocks.CROP_4B.get().asItem());
				tabData.accept(PasterdreamModBlocks.FLOWER_1.get().asItem());
				tabData.accept(PasterdreamModBlocks.FLOWER_2.get().asItem());
				tabData.accept(PasterdreamModBlocks.JUNGLE_SPORE_PLANT.get().asItem());
				tabData.accept(PasterdreamModBlocks.FLOWER_5.get().asItem());
				tabData.accept(PasterdreamModBlocks.GRASS_1.get().asItem());
				tabData.accept(PasterdreamModBlocks.FLOWER_3.get().asItem());
				tabData.accept(PasterdreamModBlocks.GRASS_2.get().asItem());
				tabData.accept(PasterdreamModBlocks.GOLDENROD.get().asItem());
				tabData.accept(PasterdreamModBlocks.FOURLEAF_CLOVER.get().asItem());
				tabData.accept(PasterdreamModBlocks.FLOWER_6.get().asItem());
				tabData.accept(PasterdreamModBlocks.FLOWER_7.get().asItem());
				tabData.accept(PasterdreamModBlocks.SHADOW_FUNGUS.get().asItem());
				tabData.accept(PasterdreamModBlocks.GRASS_8.get().asItem());
				tabData.accept(PasterdreamModBlocks.GRASS_9.get().asItem());
				tabData.accept(PasterdreamModBlocks.GRASS_10.get().asItem());
				tabData.accept(PasterdreamModBlocks.GRASS_11.get().asItem());
				tabData.accept(PasterdreamModBlocks.GRASS_12.get().asItem());
				tabData.accept(PasterdreamModBlocks.FLOWER_15.get().asItem());
				tabData.accept(PasterdreamModBlocks.GRASS_13.get().asItem());
				tabData.accept(PasterdreamModBlocks.GRASS_14.get().asItem());
				tabData.accept(PasterdreamModBlocks.GRASS_15.get().asItem());
				tabData.accept(PasterdreamModBlocks.FLOWER_18.get().asItem());
				tabData.accept(PasterdreamModBlocks.FIG_VINE.get().asItem());
			})

					.build());
	public static final RegistryObject<CreativeModeTab> PASTER_TAB_3 = REGISTRY.register("paster_tab_3",
			() -> CreativeModeTab.builder().title(Component.translatable("item_group.pasterdream.paster_tab_3")).icon(() -> new ItemStack(PasterdreamModItems.DYEDREAM_SWORD_0.get())).displayItems((parameters, tabData) -> {
				tabData.accept(PasterdreamModItems.COPPER_SWORD.get());
				tabData.accept(PasterdreamModItems.COPPER_PICKAXE.get());
				tabData.accept(PasterdreamModItems.COPPER_AXE.get());
				tabData.accept(PasterdreamModItems.COPPER_SHOVEL.get());
				tabData.accept(PasterdreamModItems.COPPER_HOE.get());
				tabData.accept(PasterdreamModItems.COPPER_ARMOR_HELMET.get());
				tabData.accept(PasterdreamModItems.COPPER_ARMOR_CHESTPLATE.get());
				tabData.accept(PasterdreamModItems.COPPER_ARMOR_LEGGINGS.get());
				tabData.accept(PasterdreamModItems.COPPER_ARMOR_BOOTS.get());
				tabData.accept(PasterdreamModItems.TITANIUM_SWORD.get());
				tabData.accept(PasterdreamModItems.TITANIUM_PICKAXE.get());
				tabData.accept(PasterdreamModItems.TITANIUM_AXE.get());
				tabData.accept(PasterdreamModItems.TITANIUM_SHOVEL.get());
				tabData.accept(PasterdreamModItems.TITANIUM_HOE.get());
				tabData.accept(PasterdreamModItems.TITANIUM_ARMOR_HELMET.get());
				tabData.accept(PasterdreamModItems.TITANIUM_ARMOR_CHESTPLATE.get());
				tabData.accept(PasterdreamModItems.TITANIUM_ARMOR_LEGGINGS.get());
				tabData.accept(PasterdreamModItems.TITANIUM_ARMOR_BOOTS.get());
				tabData.accept(PasterdreamModItems.TITANIUM_UPGRADE.get());
				tabData.accept(PasterdreamModItems.SCULK_ARMOR_HELMET.get());
				tabData.accept(PasterdreamModItems.SCULK_ARMOR_CHESTPLATE.get());
				tabData.accept(PasterdreamModItems.SCULK_ARMOR_LEGGINGS.get());
				tabData.accept(PasterdreamModItems.SCULK_ARMOR_BOOTS.get());
				tabData.accept(PasterdreamModItems.SCULK_UPGRADE.get());
				tabData.accept(PasterdreamModItems.DYEDREAM_SWORD.get());
				tabData.accept(PasterdreamModItems.DYEDREAM_SWORD_0.get());
				tabData.accept(PasterdreamModItems.DYEDREAM_PICKAXE.get());
				tabData.accept(PasterdreamModItems.DYEDREAM_AXE.get());
				tabData.accept(PasterdreamModItems.DYEDREAM_SHOVEL.get());
				tabData.accept(PasterdreamModItems.DYEDREAM_HOE.get());
				tabData.accept(PasterdreamModItems.DYEDREAM_HAMMER.get());
				tabData.accept(PasterdreamModItems.DYEDREAM_ARMOR_HELMET.get());
				tabData.accept(PasterdreamModItems.DYEDREAM_ARMOR_CHESTPLATE.get());
				tabData.accept(PasterdreamModItems.DYEDREAM_ARMOR_LEGGINGS.get());
				tabData.accept(PasterdreamModItems.DYEDREAM_ARMOR_BOOTS.get());
				tabData.accept(PasterdreamModItems.DYEDREAM_UPGRADE.get());
				tabData.accept(PasterdreamModItems.MOLTENGOLD_SWORD.get());
				tabData.accept(PasterdreamModItems.TRUE_MOLTENGOLD_SWORD.get());
				tabData.accept(PasterdreamModItems.TRUEST_MOLTENGOLD_SWORD.get());
				tabData.accept(PasterdreamModItems.MOLTENGOLD_PICKAXE.get());
				tabData.accept(PasterdreamModItems.TRUE_MOLTENGOLD_PICKAXE.get());
				tabData.accept(PasterdreamModItems.MOLTENGOLD_AXE.get());
				tabData.accept(PasterdreamModItems.MOLTENGOLD_SHOVEL.get());
				tabData.accept(PasterdreamModItems.MOLTENGOLD_HOE.get());
				tabData.accept(PasterdreamModItems.MELTDREAM_PICKAXE.get());
				tabData.accept(PasterdreamModItems.MELTDREAM_AXE.get());
				tabData.accept(PasterdreamModItems.MELTDREAM_SHOVEL.get());
				tabData.accept(PasterdreamModItems.MELTDREAM_HOE.get());
				tabData.accept(PasterdreamModItems.GRASS_SWORD.get());
				tabData.accept(PasterdreamModItems.TRUE_GRASS_SWORD.get());
				tabData.accept(PasterdreamModItems.TIDE_SWORD.get());
				tabData.accept(PasterdreamModItems.TRUE_TIDE_SWORD.get());
				tabData.accept(PasterdreamModItems.DESERT_SWORD.get());
				tabData.accept(PasterdreamModItems.TRUE_DESERT_SWORD.get());
				tabData.accept(PasterdreamModItems.BROKEN_HERO_SWORD.get());
				tabData.accept(PasterdreamModItems.SHADOW_EROSION_SWORD.get());
				tabData.accept(PasterdreamModItems.SHADOW_EROSION_PICKAXE.get());
				tabData.accept(PasterdreamModItems.SHADOW_EROSION_AXE.get());
				tabData.accept(PasterdreamModItems.SHADOW_EROSION_HOE.get());
				tabData.accept(PasterdreamModItems.SHADOW_EROSION_SHOVEL.get());
				tabData.accept(PasterdreamModItems.WHITE_SWORD.get());
				tabData.accept(PasterdreamModItems.SHADOW_SWORD.get());
				tabData.accept(PasterdreamModItems.ICESHADOW_HAMMER.get());
				tabData.accept(PasterdreamModItems.STAR_WISH_ROD.get());
				tabData.accept(PasterdreamModItems.MOLTENGOLD_WAND.get());
				tabData.accept(PasterdreamModItems.TRUE_MOLTENGOLD_WAND.get());
				tabData.accept(PasterdreamModItems.TRUEST_MOLTENGOLD_WAND.get());
				tabData.accept(PasterdreamModItems.SQUEAL_WAVE_WAND.get());
				tabData.accept(PasterdreamModItems.SHADOW_VORTEX_BOOK.get());
				tabData.accept(PasterdreamModItems.DREAMHARP_OF_WANDERER.get());
				tabData.accept(PasterdreamModItems.PLIERS.get());
				tabData.accept(PasterdreamModItems.STORAGE_BAG.get());
				tabData.accept(PasterdreamModItems.STORAGE_BAG_0.get());
				tabData.accept(PasterdreamModItems.EMBRYO_RING.get());
				tabData.accept(PasterdreamModItems.EMBRYO_NECKLACE.get());
				tabData.accept(PasterdreamModItems.EMBRYO_BELT.get());
				tabData.accept(PasterdreamModItems.EMBRYO_CHARM.get());
				tabData.accept(PasterdreamModItems.RED_DEW_0_RING.get());
				tabData.accept(PasterdreamModItems.RED_DEW_1_RING.get());
				tabData.accept(PasterdreamModItems.RED_DEW_2_RING.get());
				tabData.accept(PasterdreamModItems.RED_DEW_3_RING.get());
				tabData.accept(PasterdreamModItems.HITHARD_0_RING.get());
				tabData.accept(PasterdreamModItems.HITHARD_1_RING.get());
				tabData.accept(PasterdreamModItems.COUNTER_RING.get());
				tabData.accept(PasterdreamModItems.MELTDREAM_ENERGY_0_RING.get());
				tabData.accept(PasterdreamModItems.RABBIT_0_NECKLACE.get());
				tabData.accept(PasterdreamModItems.FEATHER_NECKLACE.get());
				tabData.accept(PasterdreamModItems.HEALTH_0_NECKLACE.get());
				tabData.accept(PasterdreamModItems.FIRE_0_NECKLACE.get());
				tabData.accept(PasterdreamModItems.CROSS_NECKLACE.get());
				tabData.accept(PasterdreamModItems.NATURE_BELT.get());
				tabData.accept(PasterdreamModItems.TRAVELER_BELT.get());
				tabData.accept(PasterdreamModItems.DREAM_TRAVELER_BELT.get());
				tabData.accept(PasterdreamModItems.GOLD_CHARM.get());
				tabData.accept(PasterdreamModItems.ENDEYE_CHARM.get());
				tabData.accept(PasterdreamModItems.SEA_CHARM.get());
				tabData.accept(PasterdreamModItems.CARAPAX_CHARM.get());
				tabData.accept(PasterdreamModItems.WORLDTREE_SEEDPOD.get());
				tabData.accept(PasterdreamModItems.GARLAND.get());
				tabData.accept(PasterdreamModItems.GHOST_FACE_HEAD.get());
				tabData.accept(PasterdreamModItems.QYM_HEAD.get());
				tabData.accept(PasterdreamModItems.WHITE_FLOWER_BODY.get());
				tabData.accept(PasterdreamModItems.DEGENERATE_BODYS.get());
				tabData.accept(PasterdreamModItems.MACHINE_WING_CHESTPLATE.get());
				tabData.accept(PasterdreamModItems.DARK_ALLLEGORY_CURIO.get());
				tabData.accept(PasterdreamModItems.CALAIS_SPICE_BOTTLE_CURIO.get());
				tabData.accept(PasterdreamModItems.FOURLEAF_CLOVER_CURIO.get());
				tabData.accept(PasterdreamModItems.SNOW_VOW_HEAD.get());
				tabData.accept(PasterdreamModItems.BRIGHT_BUTTERFLY_CURIO.get());
				tabData.accept(PasterdreamModItems.ICESHADOW_CURIO.get());
				tabData.accept(PasterdreamModItems.BOBOJI_CURIO.get());
				tabData.accept(PasterdreamModItems.PAPER_PLANE.get());
				tabData.accept(PasterdreamModItems.WIND_KNIGHT_FLAG.get());
				tabData.accept(PasterdreamModItems.DREAM_WAND.get());
				tabData.accept(PasterdreamModItems.MANA_WAND.get());
				tabData.accept(PasterdreamModItems.QYM_ARMOR_HELMET.get());
				tabData.accept(PasterdreamModItems.QYM_ARMOR_CHESTPLATE.get());
				tabData.accept(PasterdreamModItems.QYM_ARMOR_LEGGINGS.get());
				tabData.accept(PasterdreamModItems.QYM_ARMOR_BOOTS.get());
				tabData.accept(PasterdreamModItems.MOSS_PHANTOM_MEMBRANE.get());
				tabData.accept(PasterdreamModItems.LIGHT_MOSS_PHANTOM_MEMBRANE.get());
				tabData.accept(PasterdreamModItems.SHADOW_BREATH.get());
				tabData.accept(PasterdreamModItems.LIGHT_BUTTERFLY_CURIO.get());
			})

					.build());
	public static final RegistryObject<CreativeModeTab> PASER_TAB_4 = REGISTRY.register("paser_tab_4",
			() -> CreativeModeTab.builder().title(Component.translatable("item_group.pasterdream.paser_tab_4")).icon(() -> new ItemStack(PasterdreamModItems.DYEDREAM_FRUIT.get())).displayItems((parameters, tabData) -> {
				tabData.accept(PasterdreamModItems.GLASSJAR.get());
				tabData.accept(PasterdreamModItems.WATER_GLASSJAR.get());
				tabData.accept(PasterdreamModItems.MILK_GLASSJAR.get());
				tabData.accept(PasterdreamModItems.YEAST.get());
				tabData.accept(PasterdreamModItems.GUIDING_DRUG.get());
				tabData.accept(PasterdreamModItems.DOUGH.get());
				tabData.accept(PasterdreamModItems.EGGDOUGH.get());
				tabData.accept(PasterdreamModItems.BREAD_SLICE.get());
				tabData.accept(PasterdreamModItems.CAKE_BASE.get());
				tabData.accept(PasterdreamModItems.WAFER_BISCUIT.get());
				tabData.accept(PasterdreamModItems.DYEDREAM_FRUIT.get());
				tabData.accept(PasterdreamModItems.FIG.get());
				tabData.accept(PasterdreamModItems.DREAMJUICE.get());
				tabData.accept(PasterdreamModItems.AMBER_CANDY.get());
				tabData.accept(PasterdreamModItems.QUEER_SOUP.get());
				tabData.accept(PasterdreamModItems.DYEDREAM_FLOWER_TEA_0.get());
				tabData.accept(PasterdreamModItems.DYEDREAM_FLOWER_TEA.get());
				tabData.accept(PasterdreamModItems.GLASS_CUP.get());
				tabData.accept(PasterdreamModItems.DYEDREAM_JUICE.get());
				tabData.accept(PasterdreamModItems.APPLE_JUICE.get());
				tabData.accept(PasterdreamModItems.HONEY_JUICE.get());
				tabData.accept(PasterdreamModItems.WATERMELON_JUICE.get());
				tabData.accept(PasterdreamModItems.DYEDREAM_POPSICLE.get());
				tabData.accept(PasterdreamModItems.FRIED_EGG.get());
				tabData.accept(PasterdreamModItems.BACONE_EGG.get());
				tabData.accept(PasterdreamModItems.RICECAKE.get());
				tabData.accept(PasterdreamModItems.SANDWICH_0.get());
				tabData.accept(PasterdreamModItems.CHOCOLATE.get());
				tabData.accept(PasterdreamModItems.POPPING_CANDY.get());
				tabData.accept(PasterdreamModItems.CHOCOLATE_MATCHA_CAKE.get());
				tabData.accept(PasterdreamModItems.SWISS_ROLL.get());
				tabData.accept(PasterdreamModItems.STUFFED_WAFER_COOKIES.get());
				tabData.accept(PasterdreamModItems.BUNCAKE_0.get());
				tabData.accept(PasterdreamModItems.BUNCAKE_1.get());
				tabData.accept(PasterdreamModItems.BUNCAKE_2.get());
				tabData.accept(PasterdreamModItems.BUNCAKE_3.get());
				tabData.accept(PasterdreamModItems.BUNCAKE_4.get());
				tabData.accept(PasterdreamModItems.BUNCAKE_5.get());
				tabData.accept(PasterdreamModItems.BUNCAKE_6.get());
				tabData.accept(PasterdreamModItems.HEART_CHOCOLATE_0.get());
				tabData.accept(PasterdreamModItems.HEART_CHOCOLATE_1.get());
				tabData.accept(PasterdreamModItems.HEART_CHOCOLATE_2.get());
				tabData.accept(PasterdreamModItems.GINGERBREAD_MAN.get());
				tabData.accept(PasterdreamModItems.CANDY_CANE.get());
				tabData.accept(PasterdreamModItems.BUBBLE_GUM.get());
				tabData.accept(PasterdreamModItems.DREAM_COTTON_CANDY.get());
				tabData.accept(PasterdreamModItems.YINHUL_COTTON_CANDY.get());
				tabData.accept(PasterdreamModItems.JELLYFISH_MUD.get());
				tabData.accept(PasterdreamModItems.JELLYFISH_JELLO.get());
				tabData.accept(PasterdreamModItems.ELIXIR_BOTTLE.get());
				tabData.accept(PasterdreamModItems.MELTDREAM_ELIXIR_BOTTLE.get());
				tabData.accept(PasterdreamModItems.RAGE_ELIXIR_0.get());
				tabData.accept(PasterdreamModItems.PINEAPPLE_LOVE_SEA.get());
				tabData.accept(PasterdreamModItems.GOLDENROD_TEA.get());
				tabData.accept(PasterdreamModItems.LEGEND_DRAGON_HORN_ICE_CREAM.get());
				tabData.accept(PasterdreamModItems.DYEDREAM_PERFUME.get());
				tabData.accept(PasterdreamModItems.LIGHT_ORGAN.get());
			})

					.build());
	public static final RegistryObject<CreativeModeTab> PASTER_TAB_5 = REGISTRY.register("paster_tab_5",
			() -> CreativeModeTab.builder().title(Component.translatable("item_group.pasterdream.paster_tab_5")).icon(() -> new ItemStack(PasterdreamModBlocks.QYM_DOLL_0.get())).displayItems((parameters, tabData) -> {
				tabData.accept(PasterdreamModBlocks.MELTDREAM_CHEST.get().asItem());
				tabData.accept(PasterdreamModBlocks.MELTDREAM_CHEST_OPEN.get().asItem());
				tabData.accept(PasterdreamModBlocks.DREAM_ACCUMULATOR.get().asItem());
				tabData.accept(PasterdreamModBlocks.CLAYPAN_0.get().asItem());
				tabData.accept(PasterdreamModBlocks.RESEARCH_TABLE.get().asItem());
				tabData.accept(PasterdreamModBlocks.FORCED_TOWER.get().asItem());
				tabData.accept(PasterdreamModBlocks.WEAPON_TABLE.get().asItem());
				tabData.accept(PasterdreamModBlocks.WEAPON_WORKSHOP.get().asItem());
				tabData.accept(PasterdreamModBlocks.DYEDREAM_DESK.get().asItem());
				tabData.accept(PasterdreamModBlocks.LOST_SWORD_BLOCK.get().asItem());
				tabData.accept(PasterdreamModBlocks.DESERT_HERO_TOMB.get().asItem());
				tabData.accept(PasterdreamModBlocks.QYM_DOLL_0.get().asItem());
				tabData.accept(PasterdreamModBlocks.UUZ_DOLL_0.get().asItem());
				tabData.accept(PasterdreamModBlocks.TWILIGHT_LANTERN.get().asItem());
				tabData.accept(PasterdreamModBlocks.SHADOW_BED.get().asItem());
				tabData.accept(PasterdreamModBlocks.SHADOW_DESK.get().asItem());
				tabData.accept(PasterdreamModBlocks.SHADOW_CHEST.get().asItem());
				tabData.accept(PasterdreamModBlocks.SHADOW_BLAST_FURNACE_CORE.get().asItem());
				tabData.accept(PasterdreamModBlocks.SHADOW_BLAST_FURNACE.get().asItem());
				tabData.accept(PasterdreamModBlocks.CALLE_CARD_BLOCK.get().asItem());
				tabData.accept(PasterdreamModBlocks.GUARD_CRYSTAL.get().asItem());
				tabData.accept(PasterdreamModBlocks.BROKEN_SHADOW_DUNGEON_PROTAL.get().asItem());
				tabData.accept(PasterdreamModBlocks.SHADOW_DUNGEON_PORTAL.get().asItem());
				tabData.accept(PasterdreamModBlocks.SHADOW_DUNGEON_DOOR_0.get().asItem());
				tabData.accept(PasterdreamModBlocks.SHADOWDUNGEONDOOR_2.get().asItem());
				tabData.accept(PasterdreamModBlocks.SHADOW_DUNGEON_KEY_0.get().asItem());
				tabData.accept(PasterdreamModBlocks.SHADOW_DUNGEON_KEY_1.get().asItem());
				tabData.accept(PasterdreamModBlocks.SHADOW_TRAP_0.get().asItem());
				tabData.accept(PasterdreamModBlocks.SHADOW_BRAZIER.get().asItem());
				tabData.accept(PasterdreamModBlocks.AARONCOS_HAND_CHEST.get().asItem());
				tabData.accept(PasterdreamModBlocks.DREAM_CAULDRON.get().asItem());
				tabData.accept(PasterdreamModBlocks.BIRDS_NEST.get().asItem());
				tabData.accept(PasterdreamModBlocks.WINDMOOR_CRATE.get().asItem());
				tabData.accept(PasterdreamModBlocks.THE_ENDLESS_BOOK_OF_DREAM_SEEKERS.get().asItem());
				tabData.accept(PasterdreamModBlocks.CHRISTMAS_LIGHTS.get().asItem());
				tabData.accept(PasterdreamModBlocks.FIREFLY_NEST.get().asItem());
				tabData.accept(PasterdreamModBlocks.ECOLOGY_GLASS_JAR.get().asItem());
				tabData.accept(PasterdreamModBlocks.FIREFLY_GLASS_JAR.get().asItem());
				tabData.accept(PasterdreamModBlocks.LIFE_CRYSTAL.get().asItem());
				tabData.accept(PasterdreamModBlocks.PICNIC_BASKET.get().asItem());
				tabData.accept(PasterdreamModBlocks.WIND_KNIGHT_SPAWNBLOCK_0.get().asItem());
				tabData.accept(PasterdreamModBlocks.GOLDEN_FOX_SCULPTURE.get().asItem());
				tabData.accept(PasterdreamModBlocks.SMALL_STONE_SPIRIT_BLOCK.get().asItem());
				tabData.accept(PasterdreamModItems.SHADOW_HAND_LANTERN.get());
			})

					.build());
	public static final RegistryObject<CreativeModeTab> PASTER_TAB_6 = REGISTRY.register("paster_tab_6",
			() -> CreativeModeTab.builder().title(Component.translatable("item_group.pasterdream.paster_tab_6")).icon(() -> new ItemStack(PasterdreamModItems.DREAMNOTES_0.get())).displayItems((parameters, tabData) -> {
				tabData.accept(PasterdreamModItems.DREAMNOTES_0.get());
				tabData.accept(PasterdreamModItems.DREAMNOTES_1.get());
				tabData.accept(PasterdreamModItems.DREAMNOTES_2.get());
				tabData.accept(PasterdreamModItems.DREAMNOTES_3.get());
				tabData.accept(PasterdreamModItems.DREAMNOTES_4.get());
				tabData.accept(PasterdreamModItems.DREAMNOTES_5.get());
				tabData.accept(PasterdreamModItems.DREAMNOTES_6.get());
				tabData.accept(PasterdreamModItems.DREAMNOTES_7.get());
				tabData.accept(PasterdreamModItems.DREAMNOTES_8.get());
				tabData.accept(PasterdreamModItems.DREAMNOTES_9.get());
				tabData.accept(PasterdreamModItems.DREAMNOTES_10.get());
				tabData.accept(PasterdreamModItems.DREAMNOTES_11.get());
				tabData.accept(PasterdreamModItems.DREAMNOTES_12.get());
				tabData.accept(PasterdreamModItems.DREAMNOTES_13.get());
				tabData.accept(PasterdreamModItems.DREAMNOTES_14.get());
				tabData.accept(PasterdreamModItems.BLUEPRINT_0.get());
				tabData.accept(PasterdreamModItems.BLUEPRINT_1.get());
			})

					.build());
	public static final RegistryObject<CreativeModeTab> PASTER_TAB_7 = REGISTRY.register("paster_tab_7",
			() -> CreativeModeTab.builder().title(Component.translatable("item_group.pasterdream.paster_tab_7")).icon(() -> new ItemStack(PasterdreamModItems.MEMENTO_ITEM_01.get())).displayItems((parameters, tabData) -> {
				tabData.accept(PasterdreamModItems.MEMORY_GEM_0.get());
				tabData.accept(PasterdreamModItems.MEMENTO_ITEM_01.get());
				tabData.accept(PasterdreamModItems.MEMENTO_ITEM_05.get());
				tabData.accept(PasterdreamModItems.MEMENTO_ITEM_06.get());
				tabData.accept(PasterdreamModItems.MEMENTO_ITEM_02.get());
				tabData.accept(PasterdreamModItems.MEMENTO_ITEM_03.get());
				tabData.accept(PasterdreamModItems.MEMENTO_ITEM_04.get());
				tabData.accept(PasterdreamModItems.MEMENTO_ITEM_07.get());
				tabData.accept(PasterdreamModItems.MEMENTO_ITEM_08.get());
				tabData.accept(PasterdreamModItems.MEMENTO_ITEM_09.get());
				tabData.accept(PasterdreamModItems.MEMENTO_ITEM_10.get());
				tabData.accept(PasterdreamModBlocks.MEMENTO_ITEM_11.get().asItem());
			})

					.build());
	public static final RegistryObject<CreativeModeTab> PASTER_TAB_8 = REGISTRY.register("paster_tab_8",
			() -> CreativeModeTab.builder().title(Component.translatable("item_group.pasterdream.paster_tab_8")).icon(() -> new ItemStack(PasterdreamModItems.TABITEM_1.get())).displayItems((parameters, tabData) -> {
				tabData.accept(PasterdreamModItems.TABITEM_1.get());
				tabData.accept(PasterdreamModItems.DREAMWISH.get());
				tabData.accept(PasterdreamModItems.CREATIVE_SWORD.get());
				tabData.accept(PasterdreamModBlocks.STARCALL_BLOCK.get().asItem());
				tabData.accept(PasterdreamModItems.EXCAVATOR.get());
				tabData.accept(PasterdreamModBlocks.DYEDREAM_CRACK.get().asItem());
				tabData.accept(PasterdreamModBlocks.STARCALL_CRACK.get().asItem());
				tabData.accept(PasterdreamModItems.LOOTSTABLE_CREATE_0.get());
				tabData.accept(PasterdreamModItems.LOOTSTABLE_CREATE_1.get());
				tabData.accept(PasterdreamModItems.LOOTSTABLE_CREATE_2.get());
				tabData.accept(PasterdreamModItems.LOOTSTABLE_CREATE_3.get());
				tabData.accept(PasterdreamModItems.LOOTSTABLE_CREATE_4.get());
				tabData.accept(PasterdreamModItems.LOOTSTABLE_CREATE_5.get());
				tabData.accept(PasterdreamModItems.LOOTSTABLE_CREATE_6.get());
				tabData.accept(PasterdreamModItems.LOOTSTABLE_CREATE_7.get());
				tabData.accept(PasterdreamModItems.LOOTSTABLE_CREATE_8.get());
				tabData.accept(PasterdreamModItems.LOOTSTABLE_CREATE_9.get());
				tabData.accept(PasterdreamModBlocks.GUARD_BLOCK.get().asItem());
				tabData.accept(PasterdreamModBlocks.RESTRAINMOVE_BLOCK.get().asItem());
				tabData.accept(PasterdreamModBlocks.DREAM_SPAWNER_0.get().asItem());
				tabData.accept(PasterdreamModBlocks.DREAM_SPAWNER_1.get().asItem());
				tabData.accept(PasterdreamModItems.PINK_CHICKEN_SPAWN_EGG.get());
				tabData.accept(PasterdreamModItems.PINK_SLIME_SPAWN_EGG.get());
				tabData.accept(PasterdreamModItems.BASALT_SNAIL_SPAWN_EGG.get());
				tabData.accept(PasterdreamModItems.SPORE_ENTITY_SPAWN_EGG.get());
				tabData.accept(PasterdreamModItems.SHADOW_GOLEM_SPAWN_EGG.get());
				tabData.accept(PasterdreamModItems.TERRORBEAK_SPAWN_EGG.get());
				tabData.accept(PasterdreamModItems.SHADOW_HAND_SPAWN_EGG.get());
				tabData.accept(PasterdreamModItems.CRAZY_TERRORBEAK_SPAWN_EGG.get());
				tabData.accept(PasterdreamModItems.SHADOW_GHOST_SPAWN_EGG.get());
				tabData.accept(PasterdreamModItems.SHADOW_SQUEAL_GHOST_SPAWN_EGG.get());
				tabData.accept(PasterdreamModItems.SHADOW_SQUEAL_GHOST_0_SPAWN_EGG.get());
				tabData.accept(PasterdreamModItems.FRIENDLY_GHOST_SPAWN_EGG.get());
				tabData.accept(PasterdreamModItems.BLACK_BEETLE_SPAWN_EGG.get());
				tabData.accept(PasterdreamModItems.BLACK_BEETLE_MOTHER_SPAWN_EGG.get());
				tabData.accept(PasterdreamModItems.SHADOW_NPC_0_SPAWN_EGG.get());
				tabData.accept(PasterdreamModItems.WEAKENESS_TERRORBEAK_SPAWN_EGG.get());
				tabData.accept(PasterdreamModItems.AARONCOS_LEFTHAND_0_SPAWN_EGG.get());
				tabData.accept(PasterdreamModItems.AARONCOS_RIGHTHAND_0_SPAWN_EGG.get());
				tabData.accept(PasterdreamModItems.SHADOW_TUNE_TOTEM_SPAWN_EGG.get());
				tabData.accept(PasterdreamModItems.SHAKING_CRYSTAL_SPAWN_EGG.get());
				tabData.accept(PasterdreamModItems.BONE_WING_SPAWN_EGG.get());
				tabData.accept(PasterdreamModItems.ASH_BONE_WING_SPAWN_EGG.get());
				tabData.accept(PasterdreamModItems.FIREFLY_SPAWN_EGG.get());
				tabData.accept(PasterdreamModItems.THUNDERCLOUD_SPAWN_EGG.get());
				tabData.accept(PasterdreamModItems.HIGHVOLTAGE_THUNDERCLOUD_SPAWN_EGG.get());
				tabData.accept(PasterdreamModItems.JELLYFISH_SPAWN_EGG.get());
				tabData.accept(PasterdreamModItems.WIND_KNIGHT_SPAWN_EGG.get());
				tabData.accept(PasterdreamModItems.GOLDEN_FOX_SPAWN_EGG.get());
				tabData.accept(PasterdreamModBlocks.SHADOW_VORTEX.get().asItem());
				tabData.accept(PasterdreamModItems.AARONCOS_ARENA_CREATE.get());
				tabData.accept(PasterdreamModBlocks.AARONCOS_ARENA_PORTALS.get().asItem());
				tabData.accept(PasterdreamModBlocks.WORKSHOP_CAULDEON.get().asItem());
				tabData.accept(PasterdreamModBlocks.WORKSHOP_BLAST.get().asItem());
				tabData.accept(PasterdreamModBlocks.WORKSHOP_ANVIL.get().asItem());
				tabData.accept(PasterdreamModBlocks.WORKSHOP_GRIND.get().asItem());
				tabData.accept(PasterdreamModItems.DREAM_METER.get());
				tabData.accept(PasterdreamModItems.SMALL_STONE_SPIRIT_SPAWN_EGG.get());
				tabData.accept(PasterdreamModItems.PASTER_BLOCK_RESET_TOOL.get());
			})

					.build());
	public static final RegistryObject<CreativeModeTab> PASTER_TAB_9 = REGISTRY.register("paster_tab_9",
			() -> CreativeModeTab.builder().title(Component.translatable("item_group.pasterdream.paster_tab_9")).icon(() -> new ItemStack(PasterdreamModItems.TABITEM_2.get())).displayItems((parameters, tabData) -> {
				tabData.accept(PasterdreamModItems.TABITEM_2.get());
				tabData.accept(PasterdreamModItems.ODD_BACONE_EGG.get());
				tabData.accept(PasterdreamModItems.MANADUST.get());
				tabData.accept(PasterdreamModItems.BUBBLE_TEA.get());
				tabData.accept(PasterdreamModItems.ALLKINDS_RING.get());
				tabData.accept(PasterdreamModItems.TERRA_SWORD.get());
				tabData.accept(PasterdreamModItems.TERRA_CHARM.get());
				tabData.accept(PasterdreamModItems.HIYORI_HEAD.get());
				tabData.accept(PasterdreamModItems.CECILIACARE_CHARM.get());
				tabData.accept(PasterdreamModItems.THERMAL_DAGGER.get());
				tabData.accept(PasterdreamModItems.DUKE_COIN_CURIO.get());
				tabData.accept(PasterdreamModItems.DREAM_AURORIAN_STEEL.get());
				tabData.accept(PasterdreamModItems.TURNBACK_CLOAK.get());
				tabData.accept(PasterdreamModItems.EVASION_CLOAK.get());
				tabData.accept(PasterdreamModItems.STRAWBERRY_HEART.get());
				tabData.accept(PasterdreamModItems.SILVER_BELL.get());
				tabData.accept(PasterdreamModItems.CRADLE_IN_ONES_ARMS.get());
				tabData.accept(PasterdreamModItems.FORSAKENS_WING_CHESTPLATE.get());
				tabData.accept(PasterdreamModItems.ANGEL_WING_CHESTPLATE.get());
			})

					.build());
}
